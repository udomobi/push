version: 2
jobs:
  build:
    working_directory: /app

    docker:
      - image: ilha/python3-base

      - image: mdillon/postgis
        environment:
          POSTGRES_DB: temba 
          POSTGRES_USER: temba 
          POSTGRES_PASSWORD: temba

      - image: redis

      - image: elastic/elasticsearch:6.3.1

    steps:
      - checkout

      - restore_cache:
          keys:
            - pip-dependencies-{{ checksum "pip-freeze.txt" }}
            # fallback to using the latest cache if no exact match is found
            - pip-dependencies-
            - npm-dependencies{{ checksum "package-lock.json" }}

      - run:
          name: install dependencies
          command: |
            pip install --upgrade pip
            pip --version
            pip install -r pip-freeze.txt
            pip install coveralls
            pip install flake8

      - run:
          name: install npm dependencies
          command: |
            npm install
            npm run build

      - run:
          name: goflow and indexer
          environment:
            GOFLOW_VERSION: "0.10.20"
            RPINDEXER_VERSION: "1.0.22"
          command: |
            # setup a goflow server instance
            wget https://github.com/nyaruka/goflow/releases/download/v${GOFLOW_VERSION}/goflow_${GOFLOW_VERSION}_linux_amd64.tar.gz
            tar -xvf goflow_${GOFLOW_VERSION}_linux_amd64.tar.gz

            # prepare rp-indexer binary
            wget https://github.com/nyaruka/rp-indexer/releases/download/v${RPINDEXER_VERSION}/rp-indexer_${RPINDEXER_VERSION}_linux_amd64.tar.gz
            tar -xvf rp-indexer_${RPINDEXER_VERSION}_linux_amd64.tar.gz

      - run:
          name: tests
          command: |
            # any non-zero error code should be treated as an immediate failure
            set -e

            ln -s $CIRCLE_WORKING_DIRECTORY/temba/settings.py.dev $CIRCLE_WORKING_DIRECTORY/temba/settings.py

            # test that everything is well formatted
            black --line-length=119 temba --check --quiet || (echo 'The source code could use a bit more black.' && exit 1)

            # test PEP8 compliance on both Python 2 and 3
            flake8

            # check for model changes not reflected in a migration
            python3 manage.py makemigrations --dry-run | grep 'No changes detected' || (echo 'There are changes which require migrations.' && exit 1)

            # run our Javascript tests
            # node_modules/karma/bin/karma start karma.conf.coffee --single-run --browsers PhantomJS

            # check we can collect and compress all static files
            python3 manage.py collectstatic --noinput --verbosity=0
            (! python manage.py compress --extension=".haml" --settings=temba.settings_compress | grep 'Error') || exit 1

            # fire up goflow
            ./flowserver --log-level=warn &
            jobs

            # run our Python tests
            coverage run manage.py test --settings=temba.settings_travis --noinput --verbosity=2

            set +e

      - save_cache:
          paths:
            - ./env
          key: pip-dependencies-{{ checksum "pip-freeze.txt" }}

      - save_cache:
          paths:
            - ./node_modules
          key: npm-dependencies{{ checksum "package-lock.json" }}
